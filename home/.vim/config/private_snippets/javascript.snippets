#
# Mocha + Chai + Sinon
#
snippet it "it() {}"
it("${1}", () => {
	${2}
});
endsnippet

snippet desc "describe() {}"
describe("${1}", () => {
  ${2}
});
endsnippet

snippet bef "beforeEach"
beforeEach(() => {
  ${1}
});
endsnippet

snippet exp "expect"
expect(${1}).to${2}
endsnippet

snippet d "debugger"
debugger;
endsnippet

#
# Function
#
snippet f "() => {};"
(${1:params}) => {
  ${2}
}
endsnippet

snippet const "constructor() {}"
constructor(${1}) {
	${2}
}
endsnippet

snippet us "use strict"
'use strict';
endsnippet

#
# ESLINT
#

snippet esld "eslint disable for next line"
// eslint-disable-next-line
endsnippet

snippet esl0 "eslint OFF"
/*eslint-disable ${1}*/
endsnippet

snippet esl1 "eslint ON"
/*eslint-enable ${1}*/
endsnippet

snippet esl "eslint OFF-ON"
/*eslint-disable $1*/
${0:${VISUAL}}
/*eslint-enable $1*/
endsnippet

snippet esn "eslint next line"
// eslint-disable-next-line ${1}
endsnippet

# Require
snippet r "r"
const ${1:} = require("$1");
endsnippet

# console.log
snippet cl "console.log"
console.log(${1});
endsnippet

# console.error
snippet ce "console.error"
console.error(${1});
endsnippet

# console.info
snippet ci "console.info"
console.info(${1});
endsnippet

snippet undef "if(undef) {}"
if(typeof ${1} === "undefined") {
	${2}
}
endsnippet

# Used in formofill to export a class for testing
# purposes and require()ing it
snippet export "export class"
// REMOVE START
if(typeof exports === "object") {
	exports.clazz = ${1};
}
// REMOVE END
endsnippet

snippet qs "document.querySelector"
document.querySelector("${1}");
endsnippet

snippet qsa "document.querySelectorAll"
document.querySelectorAll("${1}");
endsnippet

snippet todo "// TODO"
//TODO: ${1} (FS, `!v strftime("%Y-%m-%d")`)
endsnippet

snippet add ".addEventListener" w
addEventListener("${1:click}", function(evt) {
  ${2}
});
endsnippet

snippet im "import { } ..."
import { ${1} } from "${2}";
endsnippet

snippet imp "import ..."
import ${1} from "${2}";
endsnippet

snippet i18n "chrome.i18n.getMessage()" i
chrome.i18n.getMessage("${1}"${2:, ${3:[]}})
endsnippet

snippet nt "nexttick"
await ${1:wrapper}.vm.$nextTick();
endsnippet
